version: '3'

services:

  openldap:
    # https://github.com/osixia/docker-openldap
    container_name: '${LDAP_CONTAINER_NAME}'
    image: osixia/openldap:${LDAP_OPENLDAP_VERSION}
    command: --loglevel debug
    user: '${RUN_UID}:${RUN_GID}'
    ports:
      - '${LDAP_PORT_UNSECURE}:389'
      - '${LDAP_PORT_SECURE}:636'
    environment:
      - LDAP_OPENLDAP_GID=${RUN_UID}
      - LDAP_OPENLDAP_UID=${RUN_GID}
      - LDAP_ORGANISATION=${LDAP_ORGANISATION}
      - LDAP_DOMAIN=${LDAP_DOMAIN}
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
      - LDAP_CONFIG_PASSWORD=${LDAP_CONFIG_PASSWORD}
      - LDAP_READONLY_USER=${LDAP_READONLY_USER}
      - LDAP_READONLY_USER_USERNAME=${LDAP_READONLY_USER_USERNAME}
      - LDAP_READONLY_USER_PASSWORD=${LDAP_READONLY_USER_PASSWORD}
    volumes:
      - ./data/${LDAP_CONTAINER_NAME}/data:/var/lib/ldap
      - ./data/${LDAP_CONTAINER_NAME}/config:/etc/ldap/slapd.d
      - ./data/${LDAP_CONTAINER_NAME}/certificates:/container/service/slapd/assets/certs

  mysql:
    # https://hub.docker.com/_/mysql
    container_name: '${MYSQL_CONTAINER_NAME}'
    image: mysql:${MYSQL_VERSION}
    user: '${RUN_UID}:${RUN_GID}'
    ports:
      - '${MYSQL_PROTOCOL_MYSQL_PORT}:3306'
      - '${MYSQL_PROTOCOL_MYSQLX_PORT}:33060'
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./init/mysql:/docker-entrypoint-initdb.d
      - ./data/${MYSQL_CONTAINER_NAME}/data:/var/lib/mysql

  mariadb:
    # https://hub.docker.com/_/mariadb
    container_name: '${MARIADB_CONTAINER_NAME}'
    image: mariadb:${MARIADB_VERSION}
    user: '${RUN_UID}:${RUN_GID}'
    ports:
      - '${MARIADB_PROTOCOL_MYSQL_PORT}:3306'
      - '${MARIADB_PROTOCOL_MYSQLX_PORT}:33060'
    environment:
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
    volumes:
      - ./init/mariadb:/docker-entrypoint-initdb.d
      - ./data/${MARIADB_CONTAINER_NAME}/data:/var/lib/mysql

  postgres:
    # https://hub.docker.com/_/postgres
    container_name: '${POSTGRES_CONTAINER_NAME}'
    image: postgres:${POSTGRES_VERSION}
    user: '${RUN_UID}:${RUN_GID}'
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./init/postgres:/docker-entrypoint-initdb.d
      - ./data/${POSTGRES_CONTAINER_NAME}/data:/var/lib/postgresql/data

  mssql:
    # https://hub.docker.com/_/microsoft-mssql-server
    container_name: '${MSSQL_CONTAINER_NAME}'
    image: 'mcr.microsoft.com/mssql/server:${MSSQL_VERSION}'
    user: '${RUN_UID}:${RUN_GID}'
    # init: /docker-entrypoint-initdb.d/setup.sh
    ports:
      - '${MSSQL_TCP_PORT}:1234'
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_TCP_PORT=${MSSQL_TCP_PORT}
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
      - MSSQL_PID=${MSSQL_PID}
    volumes:
      # Microsoft is lame -> run initialization script manually ('./init/mssql/setup.sql')
      # Enhancement: microsoft/mssql-docker/pull/60
      # - ./init/${MSSQL_CONTAINER_NAME}:/docker-entrypoint-initdb.d
      - ./data/${MSSQL_CONTAINER_NAME}/data:/var/opt/mssql

  oracle:
    # https://github.com/oracle/docker-images/blob/master/OracleDatabase/SingleInstance/README.md
    container_name: '${ORACLE_CONTAINER_NAME}'
    image: 'oracle/database:${ORACLE_VERSION}'
    ports:
      - '${ORACLE_DB_PORT}:1521'
      - '${ORACLE_WEB_PORT}:5500'
    environment:
      - ORACLE_SID=${ORACLE_SID}
      - ORACLE_PDB=${ORACLE_PDB}
      - ORACLE_PWD=${ORACLE_PWD}
      - ORACLE_EDITION=${ORACLE_EDITION} 
      - ORACLE_CHARACTERSET=${ORACLE_CHARACTERSET}
      - ORACLE_PASSWORD=${ORACLE_PASSWORD}
    volumes:
      - ./data/${ORACLE_CONTAINER_NAME}:/opt/oracle/oradata
      - ./init/${ORACLE_CONTAINER_NAME}/setup:/docker-entrypoint-initdb.d/setup


# TODO:
  # Databases:
  # Sybase

  # Services:
  # OpenStack
  # Amazon Web Services (AWS)
  # System Applications Product (SAP) 7.x
  # AAF?
